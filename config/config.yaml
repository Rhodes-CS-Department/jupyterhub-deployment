proxy:
  secretToken: "fb1e7e8f4044ee770166331bf616ae7a7846e0b476fcc1d4774aad56a77a8d68"
  # Use static IP
  service:
    loadBalancerIP: 35.225.189.212
  https:
    enabled: true
    hosts:
      - rhodes-notebook.org
      - rhodes-py.org
    letsencrypt:
      contactEmail: langma@gmail.com
  chp:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi

singleuser:
  image:
    # Docker container used for spawning user servers.
    # Configured for Rhodes with required libraries installed.
    name: gcr.io/rhodes-cs/jserver
    # When upgrading the docker image, update the tag.
    # Tags should be in the namespace YYYY_MM_DDrcVV
    tag: 2021_12_30rc00
  # user resource limits
  memory:
    limit: 1G
    guarantee: 1G
  cpu:
    limit: 0.5
    guarantee: 0.1
  storage:
    capacity: 1Gi

  # sorry.
  extraEnv:
    # sorry.
    EDITOR: "vim"

  # Synchronize the libraries repository.
  lifecycleHooks:
    postStart:
      exec:
        # Note that the gitpuller command below depends on our nbgitpuller fork,
        # as the flags do not exist in the upstream repository. If we choose to
        # revert to the default version, we must update the gitpuller command
        # below to elide the flags.
        command:
          [
            "sh",
            "-c", 
            "{ gitpuller https://github.com/Rhodes-CS-Department/comp141-sp22 main comp141-sp22 --skip_rename --retry_merge \
             || gitpuller https://github.com/Rhodes-CS-Department/comp141-sp22 main comp141-sp22 ; } 2>&1 | tee -a /tmp/startup_log",
          ]

cull:
  # kill servers idle for 1 hours, every hour.
  timeout: 3600
  every: 3600
  enabled: true

hub:
  resources:
		requests:
      cpu: 200m
      memory: 512Mi
  config:
    Authenticator:
      admin_users:
      - superdockm@rhodes.edu  
      - parch-22@rhodes.edu
      - abuwa-23@rhodes.edu
      - trenthem@rhodes.edu
      - walkerd@rhodes.edu
      - kirlinp@rhodes.edu
      - langm@rhodes.edu
      - larkinsb@rhodes.edu
      - sandersb@rhodes.edu
      - sowellr@rhodes.edu
      - welshc@rhodes.edu
      - langma@gmail.com
      - catie.welsh@gmail.com
      - betswms@gmail.com
      - pkirlin@gmail.com
    GenericOAuthenticator:
      authorize_url: https://rhodes.onelogin.com/oidc/2/auth
      client_id: c0b3ff50-8b58-0139-1240-0a08f4c9941153544
      client_secret: b5ebb63085a1318bca2a2815250d15ee82e4aea69f882a4e0e9d8ab27ff859a9
      login_service: OneLogin
      oauth_callback_url: https://rhodes-notebook.org/hub/oauth_callback
      scope:
      - openid
      - profile
      token_url: https://rhodes.onelogin.com/oidc/2/token
      userdata_method: GET
      userdata_params:
        state: state
      userdata_url: https://rhodes.onelogin.com/oidc/2/me
      username_key: email
    JupyterHub:
      authenticator_class: oauthenticator.generic.GenericOAuthenticator
    # Delete a user's PVC when the user is deleted.
    KubeSpawner:
      delete_pvc: true

# Ensure images are always available on nodes.
prePuller:
  hook:
    enabled: true
    resources:
      requests:
        cpu: 0
        memory: 0
  continuous:
    enabed: true
  resources:
    requests:
      cpu: 0
      memory: 0

scheduling:
  podPriority:
    enabled: true
    globalDefault: false
    defaultPriority: 0
    userPlaceholderPriority: -10
  userPlaceholder:
    # Hold extra spots for new arrivals.
    # n1-highmem-2 has 2 vCPU and 13GB core. With overhead, this is ~10
    # severs/node. Reserving 10 slots for new arrivals optimizes for start time
    # by overprovisioning by one node.
    # TODO: reduce overprovisioning during trough usage.
    replicas: 10
  # Pin user pods to user pool.
  userPods:
    nodeAffinity:
      matchNodePurpose: require
  # Minimize resource usage by bin packing (as opposed to
  # least-loaded).
  userScheduler:
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 256Mi

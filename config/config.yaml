proxy:
  secretToken: "b2bb96a1192663038c58fb58fecf9f4d95f582f4c6a6e1a179652fa7773334e7"
  # Use static IP
  service:
    loadBalancerIP: 34.68.192.138 
  https:
    enabled: false
      #hosts:
      #  - lang-notebook.org
      #letsencrypt:
      #  contactEmail: langma@gmail.com

singleuser:
  image:
    # Docker container used for spawning user servers.
    # Configured for Rhodes with required libraries installed.
    name: gcr.io/rhodes-cs/jserver
    # When upgrading the docker image, update the tag.
    # Tags should be in the namespace YYYY_MM_DDrcVV
    tag: 2021_10_30rc01
  # user resource limits
  memory:
    limit: 1G
    guarantee: 1G
  cpu:
    limit: 0.5
    guarantee: 0.1
  storage:
    capacity: 1Gi

  # sorry.
  extraEnv:
    # sorry.
    EDITOR: "vim"

  # Synchronize the libraries repository.
  lifecycleHooks:
    postStart:
      exec:
        # Note that the gitpuller command below depends on our nbgitpuller fork,
        # as the flags do not exist in the upstream repository. If we choose to
        # revert to the default version, we must update the gitpuller command
        # below to elide the flags.
        command:
          - "sh"
          - "-c"
          - |
            gitpuller https://github.com/Rhodes-CS-Department/comp141-fa21 main comp141-fa21 --skip_rename --retry_merge 2>&1 | tee -a /tmp/startup_log
            rm -rf comp141-materials
            rm -rf comp141-premester

cull:
  # kill servers idle for 1 hours, every hour.
  timeout: 3600
  every: 3600
  enabled: true

hub:
  config:
    Authenticator:
      admin_users:
        - lang
      allowed_users:
        - lang
        - matt
    DummyAuthenticator:
      password: uhoh
    JupyterHub:
      authenticate_prometheus: false
      authenticator_class: dummy

# Ensure images are always available on nodes.
prePuller:
  hook:
    enabled: true
  continuous:
    enabed: true

scheduling:
  podPriority:
    enabled: true
    globalDefault: false
    defaultPriority: 0
    userPlaceholderPriority: -10
  userPlaceholder:
    # Hold extra spots for new arrivals.
    # n1-highmem-2 has 2 vCPU and 13GB core. With overhead, this is ~10
    # severs/node. Reserving 10 slots for new arrivals optimizes for start time
    # by overprovisioning by one node.
    # TODO: reduce overprovisioning during trough usage.
    replicas: 10
  # Pin user pods to user pool.
  userPods:
    nodeAffinity:
      matchNodePurpose: require
  # Minimize resource usage by bin packing (as opposed to
  # least-loaded).
  userScheduler:
    enabled: true

proxy:
  secretToken: "***REMOVED***"
  # Use static IP
  service:
    loadBalancerIP: 35.225.189.212
  https:
    enabled: true
    hosts:
      - rhodes-notebook.org
      - rhodes-py.org
    letsencrypt:
      contactEmail: langma@gmail.com

singleuser:
  image:
    # Docker container used for spawning user servers.
    # Configured for Rhodes with required libraries installed.
    name: gcr.io/rhodes-cs/jserver
    # When upgrading the docker image, update the tag.
    # Tags should be in the namespace YYYY_MM_DDrcVV
    tag: 2020_02_18rc00
  # user resource limits
  memory:
    limit: 1G
    guarantee: 1G
  cpu:
    limit: 0.25
    guarantee: 0.25
  storage:
    capacity: 1Gi

  # sorry.
  extraEnv:
    # sorry.
    EDITOR: "vim"

  # Synchronize the libraries repository.
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "sh"
          - "-c"
          - |
            pip install git+git://github.com/Rhodes-CS-Department/comp141-libraries.git
            gitpuller https://github.com/Rhodes-CS-Department/comp141-sp21 main comp141-materials

cull:
  # kill servers idle for 1 hours, every hour.
  timeout: 3600
  every: 3600
  enabled: true


hub:
  extraEnv:
    OAUTH2_AUTHORIZE_URL: https://rhodes.onelogin.com/oidc/2/auth
    OAUTH2_TOKEN_URL: https://rhodes.onelogin.com/oidc/2/token
    OAUTH_CALLBACK_URL: https://rhodes-notebook.org/hub/oauth_callback

auth:
  type: custom
  custom:
    className: oauthenticator.generic.GenericOAuthenticator
		config:
      login_service: "OneLogin"
      client_id: "client-id"
      client_secret: "client-secret"
      oauth_callback_url: https://rhodes-notebook.org/hub/oauth_callback
      authorize_url: https://rhodes.onelogin.com/oidc/2/auth
      token_url: https://rhodes.onelogin.com/oidc/2/token
      userdata_url: https://rhodes.onelogin.com/oidc/2/me
      userdata_method: GET
      userdata_params: {'state': 'state'}
      username_key: email
      scope:
        - openid
        - profile
  admin:
    users:
      - "parch-22@rhodes.edu"
      - "abuwa-23@rhodes.edu"
      - "langm@rhodes.edu"
      - "langma@gmail.com"
      - "catie.welsh@gmail.com"
      - "betswms@gmail.com"
      - "kirlinp@rhodes.edu"
      - "pkirlin@gmail.com"
      - "larkinsb@rhodes.edu"
      - "sowellr@rhodes.edu"


# Ensure images are always available on nodes.
prePuller:
  hook:
    enabled: true
  continuous:
    enabed: true

scheduling:
  podPriority:
    enabled: true
    globalDefault: false
    defaultPriority: 0
    userPlaceholderPriority: -10
  userPlaceholder:
    # Hold extra spots for new arrivals.
    replicas: 3
  # Pin user pods to user pool.
  userPods:
    nodeAffinity:
      matchNodePurpose: require
  # Minimize resource usage by bin packing (as opposed to
  # least-loaded).
  userScheduler:
    enabled: true
